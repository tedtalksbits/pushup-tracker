import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import {
  getKindeServerSession,
  LoginLink,
  RegisterLink,
} from '@kinde-oss/kinde-auth-nextjs/server';
import ReactQueryProvider from '@/providers/ReactQueryProvider';
import { Button } from '@/components/ui/button';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { isAuthenticated } = getKindeServerSession();
  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReactQueryProvider>
          {!isAuthenticated ? (
            <main>
              <h1>Not authenticated</h1>
              <div className='mt-4 flex flex-col space-y-4'>
                <LoginLink className='btn border'>
                  <Button className='block w-full'>Login</Button>
                </LoginLink>
                <p className='text-center text-sm'>or</p>
                <RegisterLink>
                  <Button variant='outline' className='block w-full'>
                    Register
                  </Button>
                </RegisterLink>
              </div>
            </main>
          ) : (
            <main>{children}</main>
          )}
        </ReactQueryProvider>
      </body>
    </html>
  );
}
